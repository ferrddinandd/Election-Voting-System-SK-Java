/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.voting.system;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static sk.voting.system.Voters_Log.pass;
import static sk.voting.system.Voters_Log.user;

/**
 *
 * @author Zulu
 */
public class Voters_Menu extends javax.swing.JFrame {
    int xmouse;
    int ymouse;
    String usname;
    String pscode;
    String cpname;
    String tbname;
    String pos;
    String url = ("jdbc:ucanaccess://D:\\SK Voting System\\Voting Database.accdb");
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    PreparedStatement pstmt = null;
    /**
     * Creates new form NewJFrame
     */
    public Voters_Menu() {
        initComponents();
    }
    
    public Voters_Menu (String user, String pass) {
        try{
            initComponents();
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT * FROM `Voters Information` WHERE Username LIKE '%"+user+"%' AND Password LIKE '%"+pass+"%'");
            
            while(rs.next()){
                if("VOTED".equals(rs.getString("Status"))){
                    tabpane.setSelectedIndex(3);
                }
                if("Female".equals(rs.getString("Sex"))){
                    imgFemale.setVisible(true);
                    imgMale.setVisible(false);
                } else{
                    imgFemale.setVisible(false);
                    imgMale.setVisible(true);
                }
                flname.setText(rs.getString("Full Name"));
                votersno.setText(""+rs.getString("Voters No")+".  "+rs.getString("Username"));
                age.setText(""+rs.getString("Age")+" years old");
                sex.setText(""+rs.getString("Sex"));
            }
            
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_main = new javax.swing.JPanel();
        lbl_17 = new javax.swing.JLabel();
        imgFemale = new javax.swing.JLabel();
        imgMale = new javax.swing.JLabel();
        flname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        sex = new javax.swing.JTextField();
        votersno = new javax.swing.JTextField();
        pnl_top = new javax.swing.JPanel();
        tabpane = new javax.swing.JTabbedPane();
        pnl_skcc = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        next1 = new javax.swing.JButton();
        cnd2 = new javax.swing.JCheckBox();
        cnd3 = new javax.swing.JCheckBox();
        cnd1 = new javax.swing.JCheckBox();
        lbl2 = new javax.swing.JLabel();
        lbl3 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        pnl_skcp = new javax.swing.JPanel();
        prev1 = new javax.swing.JButton();
        next2 = new javax.swing.JButton();
        cb1 = new javax.swing.JCheckBox();
        cb2 = new javax.swing.JCheckBox();
        cb3 = new javax.swing.JCheckBox();
        cb4 = new javax.swing.JCheckBox();
        cb5 = new javax.swing.JCheckBox();
        cb6 = new javax.swing.JCheckBox();
        cb7 = new javax.swing.JCheckBox();
        cb8 = new javax.swing.JCheckBox();
        cb9 = new javax.swing.JCheckBox();
        cb10 = new javax.swing.JCheckBox();
        cb11 = new javax.swing.JCheckBox();
        cb12 = new javax.swing.JCheckBox();
        cb13 = new javax.swing.JCheckBox();
        cb14 = new javax.swing.JCheckBox();
        cb15 = new javax.swing.JCheckBox();
        cb16 = new javax.swing.JCheckBox();
        cb17 = new javax.swing.JCheckBox();
        cb18 = new javax.swing.JCheckBox();
        cb19 = new javax.swing.JCheckBox();
        cb20 = new javax.swing.JCheckBox();
        cb21 = new javax.swing.JCheckBox();
        lbl5 = new javax.swing.JLabel();
        pnl_summary = new javax.swing.JPanel();
        cast_votes = new javax.swing.JButton();
        prev2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        disp2 = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        disp1 = new javax.swing.JTextPane();
        lbl6 = new javax.swing.JLabel();
        lbl7 = new javax.swing.JLabel();
        lbl8 = new javax.swing.JLabel();
        lbl9 = new javax.swing.JLabel();
        lbl10 = new javax.swing.JLabel();
        pnl_voted = new javax.swing.JPanel();
        lbl11 = new javax.swing.JLabel();
        rtrn = new javax.swing.JButton();
        lbl12 = new javax.swing.JLabel();
        lbl13 = new javax.swing.JLabel();
        lbl14 = new javax.swing.JLabel();
        lbl15 = new javax.swing.JLabel();
        lbl16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl_main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_17.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        lbl_17.setForeground(new java.awt.Color(255, 255, 255));
        lbl_17.setText("Personal Information");
        pnl_main.add(lbl_17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 250, 40));

        imgFemale.setFont(new java.awt.Font("Century Gothic", 0, 40)); // NOI18N
        imgFemale.setForeground(new java.awt.Color(255, 255, 255));
        imgFemale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/voting/system/femaleIMG.jpg"))); // NOI18N
        pnl_main.add(imgFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 120, 120));

        imgMale.setFont(new java.awt.Font("Century Gothic", 0, 40)); // NOI18N
        imgMale.setForeground(new java.awt.Color(255, 255, 255));
        imgMale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/voting/system/maleIMG.jpg"))); // NOI18N
        pnl_main.add(imgMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 120, 120));

        flname.setEditable(false);
        flname.setBackground(new java.awt.Color(43, 87, 154));
        flname.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        flname.setForeground(new java.awt.Color(255, 255, 255));
        flname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        flname.setBorder(null);
        flname.setOpaque(false);
        pnl_main.add(flname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 290, 40));

        age.setEditable(false);
        age.setBackground(new java.awt.Color(43, 87, 154));
        age.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        age.setForeground(new java.awt.Color(255, 255, 255));
        age.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        age.setText("            ");
        age.setBorder(null);
        age.setOpaque(false);
        pnl_main.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 290, 40));

        sex.setEditable(false);
        sex.setBackground(new java.awt.Color(43, 87, 154));
        sex.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        sex.setForeground(new java.awt.Color(255, 255, 255));
        sex.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sex.setText("            ");
        sex.setBorder(null);
        sex.setOpaque(false);
        pnl_main.add(sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 290, 40));

        votersno.setEditable(false);
        votersno.setBackground(new java.awt.Color(43, 87, 154));
        votersno.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        votersno.setForeground(new java.awt.Color(255, 255, 255));
        votersno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        votersno.setText("            ");
        votersno.setBorder(null);
        votersno.setOpaque(false);
        pnl_main.add(votersno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 290, 40));

        pnl_top.setBackground(new java.awt.Color(43, 87, 154));
        pnl_top.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnl_topMouseDragged(evt);
            }
        });
        pnl_top.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnl_topMousePressed(evt);
            }
        });
        pnl_main.add(pnl_top, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 30));

        tabpane.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 2, new java.awt.Color(0, 102, 102)));
        tabpane.setEnabled(false);
        tabpane.setFocusable(false);
        tabpane.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N

        pnl_skcc.setBackground(new java.awt.Color(255, 255, 255));
        pnl_skcc.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        lbl1.setText("SK Chairman  |  1");
        pnl_skcc.add(lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 240, 40));

        next1.setBackground(new java.awt.Color(255, 255, 102));
        next1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        next1.setText("NEXT");
        next1.setFocusable(false);
        next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next1ActionPerformed(evt);
            }
        });
        pnl_skcc.add(next1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 100, -1));

        cnd2.setBackground(new java.awt.Color(255, 255, 255));
        cnd2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cnd2.setText("     Onez, Bernard M.");
        cnd2.setFocusable(false);
        pnl_skcc.add(cnd2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, -1));

        cnd3.setBackground(new java.awt.Color(255, 255, 255));
        cnd3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cnd3.setText("     Panganiban, Nelson V.");
        cnd3.setFocusable(false);
        pnl_skcc.add(cnd3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, -1, -1));

        cnd1.setBackground(new java.awt.Color(255, 255, 255));
        cnd1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cnd1.setText("     Comia, Jay-Jay G.");
        cnd1.setFocusable(false);
        pnl_skcc.add(cnd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, -1, -1));

        lbl2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl2.setText("Region 4 - A CALABARZON");
        pnl_skcc.add(lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        lbl3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl3.setText("Barangay Mabilog na Bundok , Purok Batang, Lobo Batangas");
        pnl_skcc.add(lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, -1));

        lbl4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl4.setText("SK Elections  |  Katipunan ng Kabataan");
        pnl_skcc.add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        tabpane.addTab("SK Chairperson", pnl_skcc);

        pnl_skcp.setBackground(new java.awt.Color(255, 255, 255));
        pnl_skcp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        prev1.setBackground(new java.awt.Color(255, 255, 102));
        prev1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        prev1.setText("PREVIOUS");
        prev1.setFocusable(false);
        prev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prev1ActionPerformed(evt);
            }
        });
        pnl_skcp.add(prev1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 100, -1));

        next2.setBackground(new java.awt.Color(255, 255, 102));
        next2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        next2.setText("NEXT");
        next2.setFocusable(false);
        next2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next2ActionPerformed(evt);
            }
        });
        pnl_skcp.add(next2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 100, -1));

        cb1.setBackground(new java.awt.Color(255, 255, 255));
        cb1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb1.setText("Ambayec, John Viel M.");
        cb1.setFocusable(false);
        pnl_skcp.add(cb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        cb2.setBackground(new java.awt.Color(255, 255, 255));
        cb2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb2.setText("Anyayahan, John Mark C.");
        cb2.setFocusable(false);
        pnl_skcp.add(cb2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        cb3.setBackground(new java.awt.Color(255, 255, 255));
        cb3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb3.setText("Buela, Luemark D.");
        cb3.setFocusable(false);
        pnl_skcp.add(cb3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        cb4.setBackground(new java.awt.Color(255, 255, 255));
        cb4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb4.setText("Camo, Leslie E.");
        cb4.setFocusable(false);
        pnl_skcp.add(cb4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        cb5.setBackground(new java.awt.Color(255, 255, 255));
        cb5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb5.setText("Chavez, Irish Mae R.");
        cb5.setFocusable(false);
        pnl_skcp.add(cb5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        cb6.setBackground(new java.awt.Color(255, 255, 255));
        cb6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb6.setText("Dimaano, Ejay N.");
        cb6.setFocusable(false);
        pnl_skcp.add(cb6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        cb7.setBackground(new java.awt.Color(255, 255, 255));
        cb7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb7.setText("Diona, Elmer D.");
        cb7.setFocusable(false);
        pnl_skcp.add(cb7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        cb8.setBackground(new java.awt.Color(255, 255, 255));
        cb8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb8.setText("Gutierrez, Chito B.");
        cb8.setFocusable(false);
        pnl_skcp.add(cb8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        cb9.setBackground(new java.awt.Color(255, 255, 255));
        cb9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb9.setText("Ilaga, Euguene C.");
        cb9.setFocusable(false);
        pnl_skcp.add(cb9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        cb10.setBackground(new java.awt.Color(255, 255, 255));
        cb10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb10.setText("Jimenez, Joemar Jose R.");
        cb10.setFocusable(false);
        pnl_skcp.add(cb10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, -1, -1));

        cb11.setBackground(new java.awt.Color(255, 255, 255));
        cb11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb11.setText("Lucero, Camille V.");
        cb11.setFocusable(false);
        pnl_skcp.add(cb11, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        cb12.setBackground(new java.awt.Color(255, 255, 255));
        cb12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb12.setText("Madlangbayan, John Albert M.");
        cb12.setFocusable(false);
        pnl_skcp.add(cb12, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        cb13.setBackground(new java.awt.Color(255, 255, 255));
        cb13.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb13.setText("Mascarinas, Jeffrey P.");
        cb13.setFocusable(false);
        pnl_skcp.add(cb13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        cb14.setBackground(new java.awt.Color(255, 255, 255));
        cb14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb14.setText("Mendoza, Eric A.");
        cb14.setFocusable(false);
        pnl_skcp.add(cb14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, -1, -1));

        cb15.setBackground(new java.awt.Color(255, 255, 255));
        cb15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb15.setText("Mohammad, Hassan A.");
        cb15.setFocusable(false);
        pnl_skcp.add(cb15, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, -1, -1));

        cb16.setBackground(new java.awt.Color(255, 255, 255));
        cb16.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb16.setText("Pacada, James R.");
        cb16.setFocusable(false);
        pnl_skcp.add(cb16, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, -1, -1));

        cb17.setBackground(new java.awt.Color(255, 255, 255));
        cb17.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb17.setText("Pestijo, Marianne Jane A.");
        cb17.setFocusable(false);
        pnl_skcp.add(cb17, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 210, -1));

        cb18.setBackground(new java.awt.Color(255, 255, 255));
        cb18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb18.setText("Quino, Ivy C.");
        cb18.setFocusable(false);
        pnl_skcp.add(cb18, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, -1, -1));

        cb19.setBackground(new java.awt.Color(255, 255, 255));
        cb19.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb19.setText("Ramirez, Jay Christian B.");
        cb19.setFocusable(false);
        pnl_skcp.add(cb19, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, -1, -1));

        cb20.setBackground(new java.awt.Color(255, 255, 255));
        cb20.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb20.setText("Rivera, Morse M.");
        cb20.setFocusable(false);
        pnl_skcp.add(cb20, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, -1, -1));

        cb21.setBackground(new java.awt.Color(255, 255, 255));
        cb21.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        cb21.setText("Zara, Renato M.");
        cb21.setFocusable(false);
        pnl_skcp.add(cb21, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 500, -1, -1));

        lbl5.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        lbl5.setText("SK Councilor  |  7");
        pnl_skcp.add(lbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 240, 30));

        tabpane.addTab("SK Councilor", pnl_skcp);

        pnl_summary.setBackground(new java.awt.Color(255, 255, 255));
        pnl_summary.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cast_votes.setBackground(new java.awt.Color(255, 255, 102));
        cast_votes.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cast_votes.setText("CAST VOTES");
        cast_votes.setFocusable(false);
        cast_votes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cast_votesActionPerformed(evt);
            }
        });
        pnl_summary.add(cast_votes, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 520, 180, 40));

        prev2.setBackground(new java.awt.Color(255, 255, 102));
        prev2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        prev2.setText("PREVIOUS");
        prev2.setFocusable(false);
        prev2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prev2ActionPerformed(evt);
            }
        });
        pnl_summary.add(prev2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 100, -1));

        disp2.setEditable(false);
        disp2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "SK Councilor", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Century Gothic", 0, 14))); // NOI18N
        disp2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        disp2.setFocusable(false);
        jScrollPane1.setViewportView(disp2);

        pnl_summary.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 270, 330));

        disp1.setEditable(false);
        disp1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "SK Chairman", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Century Gothic", 0, 14))); // NOI18N
        disp1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        disp1.setAutoscrolls(false);
        disp1.setFocusable(false);
        jScrollPane2.setViewportView(disp1);

        pnl_summary.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 260, 100));

        lbl6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl6.setText("Summary of VOTES");
        pnl_summary.add(lbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        lbl7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl7.setText("Barangay Mabilog na Bundok , Purok Batang, Lobo Batangas");
        pnl_summary.add(lbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        lbl8.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl8.setText("Region 4 - A CALABARZON");
        pnl_summary.add(lbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        lbl9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl9.setText("THANK YOU FOR VOTING!");
        pnl_summary.add(lbl9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        lbl10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl10.setText("SK Elections  |  Katipunan ng Kabataan");
        pnl_summary.add(lbl10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        tabpane.addTab("SUMMARY", pnl_summary);

        pnl_voted.setBackground(new java.awt.Color(255, 255, 255));
        pnl_voted.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl11.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lbl11.setText("\"You've already voted.\"");
        pnl_voted.add(lbl11, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, -1));

        rtrn.setBackground(new java.awt.Color(255, 255, 102));
        rtrn.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        rtrn.setText("RETURN");
        rtrn.setFocusable(false);
        rtrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtrnActionPerformed(evt);
            }
        });
        pnl_voted.add(rtrn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 520, 150, 40));

        lbl12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/voting/system/tabbeIMG.jpg"))); // NOI18N
        pnl_voted.add(lbl12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 570, 470));

        lbl13.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl13.setText("Barangay Mabilog na Bundok , Purok Batang, Lobo Batangas");
        pnl_voted.add(lbl13, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        lbl14.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl14.setText("Region 4 - A CALABARZON");
        pnl_voted.add(lbl14, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        lbl15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl15.setText("SK Elections  |  Katipunan ng Kabataan");
        pnl_voted.add(lbl15, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        tabpane.addTab("VOTED", pnl_voted);

        pnl_main.add(tabpane, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 590, 600));

        lbl16.setBackground(new java.awt.Color(25, 88, 194));
        lbl16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sk/voting/system/voterIMG.jpg"))); // NOI18N
        pnl_main.add(lbl16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 600));

        getContentPane().add(pnl_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next1ActionPerformed
        int limit = 0;
        cpname = "  EMPTY";
        if(cnd1.isSelected()){
            limit+=1;
            cpname = "Comia, Jay-Jay G.";
        }
        if(cnd2.isSelected()){
            limit+=1;
            cpname = "Onez, Bernard M.";
        }
        if(cnd3.isSelected()){
            limit+=1;
            cpname = "Panganiban, Nelson V.";
        }

        if (limit <= 1){
            tabpane.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(null, "Limit exceeds. Maximum of 1 SK Chairperson ONLY.");
        }

        disp1.setText("\n     "+cpname);
    }//GEN-LAST:event_next1ActionPerformed

    private void prev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prev1ActionPerformed
        tabpane.setSelectedIndex(0);
    }//GEN-LAST:event_prev1ActionPerformed

    private void next2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next2ActionPerformed
        int count = 0;
        String skc1 = "", skc2 = "", skc3 = "", skc4 = "", skc5 = "",skc6 = "", skc7 = "", skc8 = "", skc9 = "", skc10 = "";
        String skc11 = "", skc12 = "", skc13 = "", skc14 = "", skc15 = "",skc16 = "", skc17 = "", skc18 = "", skc19 = "", skc20 = "", skc21 = "";
        if(cb1.isSelected()){
            count+=1;
            skc1 = "  Ambayec, John Viel M.\n\n";
        }
        if(cb2.isSelected()){
            count+=1;
            skc2 = "  Anyayahan, John Mark C.\n\n";
        }
        if(cb3.isSelected()){
            count+=1;
            skc3 = "  Buela, Luemark D.\n\n";
        }
        if(cb4.isSelected()){
            count+=1;
            skc4 = "  Camo, Leslie E.\n\n";
        }
        if(cb5.isSelected()){
            count+=1;
            skc5 = "  Chavez, Irish Mae R.\n\n";
        }
        if(cb6.isSelected()){
            count+=1;
            skc6 = "  Dimaano, Ejay N.\n\n";
        }
        if(cb7.isSelected()){
            count+=1;
            skc7 = "  Diona, Elmer D.\n\n";
        }
        if(cb8.isSelected()){
            count+=1;
            skc8 = "  Gutierrez, Chito B.\n\n";
        }
        if(cb9.isSelected()){
            count+=1;
            skc9 = "  Ilaga, Euguene C.\n\n";
        }
        if(cb10.isSelected()){
            count+=1;
            skc10 = "  Jimenez, Joemar Jose R.\n\n";
        }
        if(cb11.isSelected()){
            count+=1;
            skc11 = "  Lucero, Camille V.\n\n";
        }
        if(cb12.isSelected()){
            count+=1;
            skc12 = "  Madlangbayan, John Albert M.\n\n";
        }
        if(cb13.isSelected()){
            count+=1;
            skc13 = "  Mascarinas, Jeffrey P.\n\n";
        }
        if(cb14.isSelected()){
            count+=1;
            skc14 = "  Mendoza, Eric A.\n\n";
        }
        if(cb15.isSelected()){
            count+=1;
            skc15 = "  Mohammad, Hassan A.\n\n";
        }
        if(cb16.isSelected()){
            count+=1;
            skc16 = "  Pacada, James R.\n\n";
        }
        if(cb17.isSelected()){
            count+=1;
            skc17 = "  Pestijo, Marianne Jane A.\n\n";
        }
        if(cb18.isSelected()){
            count+=1;
            skc18 = "  Quino, Ivy C.\n\n";
        }
        if(cb19.isSelected()){
            count+=1;
            skc19 = "  Ramirez, Jay Christian B.\n\n";
        }
        if(cb20.isSelected()){
            count+=1;
            skc20 = "  Rivera, Morse M.\n\n";
        }
        if(cb21.isSelected()){
            count+=1;
            skc21 = "  Zara, Renato M.\n\n";
        }

        disp2.setText(""+skc1+""+skc2+""+skc3+""+skc4+""+skc5+""+skc6+""+skc7+""+skc8+""+skc9+""+skc10+""
            +skc11+""+skc12+""+skc13+""+skc14+""+skc15+""+skc16+""+skc17+""+skc18+""+skc19+""+skc20+""+skc21);

        if (count > (7)){
            JOptionPane.showMessageDialog(null, "Limit exceeds. Maximum of 7 SK Councilors ONLY.");
        } else {
            tabpane.setSelectedIndex(2);
        }
    }//GEN-LAST:event_next2ActionPerformed
    
    private void cast_votesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cast_votesActionPerformed
        String query = null;
        
        try{
            String vote = null;
            
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();

            if("EMPTY".equals(cpname)){
                rs = stmt.executeQuery("SELECT * FROM `No Votes` WHERE `Position` LIKE '%"+"SK Chairperson"+"%'");
                query = ("UPDATE `No Votes` SET `Vote Count` = ? WHERE `Position` = '"+"SK Chairperson"+"' ");
            }
            else{
                rs = stmt.executeQuery("SELECT * FROM `SK Chairman` WHERE `Full Name` LIKE '%"+cpname+"%'");
                query = ("UPDATE `SK Chairman` SET `Vote Count` = ? WHERE `Full Name` = '"+cpname+"' ");
            }

            while(rs.next()){
                int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                vote = Integer.toString(i);
            }
            pstmt = conn.prepareStatement(query);
            pstmt.setString(1, vote);
            pstmt.executeUpdate();

        } catch(NumberFormatException | SQLException e){
            System.out.println(e);
        }
        
        try{
            String vote = null;
            
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            
            if(cb1.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Ambayec, John Viel M."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Ambayec, John Viel M."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb2.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Anyayahan, John Mark C."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Anyayahan, John Mark C."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb3.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Buela, Luemark D."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Buela, Luemark D."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb4.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Camo, Leslie E."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Camo, Leslie E."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb5.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Chavez, Irish Mae R."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Chavez, Irish Mae R."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb6.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Dimaano, Ejay N."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Dimaano, Ejay N."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb7.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Diona, Elmer D."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Diona, Elmer D."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb8.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Gutierrez, Chito B."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Gutierrez, Chito B."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb9.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Ilaga, Euguene C."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Ilaga, Euguene C."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb10.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Jimenez, Joemar Jose R."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Jimenez, Joemar Jose R."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb11.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Lucero, Camille V."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Lucero, Camille V."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb12.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Madlangbayan, John Albert M."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Madlangbayan, John Albert M."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb13.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Mascarinas, Jeffrey P."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Mascarinas, Jeffrey P."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb14.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Mendoza, Eric A."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Mendoza, Eric A."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb15.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Mohammad, Hassan A."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Mohammad, Hassan A."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb16.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Pacada, James R."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Pacada, James R."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb17.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Pestijo, Marianne Jane A."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Pestijo, Marianne Jane A."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb18.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Quino, Ivy C."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Quino, Ivy C."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb19.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Ramirez, Jay Christian B."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Ramirez, Jay Christian B."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb20.isSelected()){
                String cc20 = null;
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Rivera, Morse M."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Rivera, Morse M."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
                
            }
            
            if(cb21.isSelected()){
                
                rs = stmt.executeQuery("SELECT * FROM `SK Councilor` WHERE `Full Name` LIKE '%"+"Zara, Renato M."+"%'");
                query = ("UPDATE `SK Councilor` SET `Vote Count` = ? WHERE `Full Name` = '"+"Zara, Renato M."+"' ");

                while(rs.next()){
                    int i = Integer.parseInt(rs.getString("Vote Count")) + 1;
                    vote = Integer.toString(i);
                }
                pstmt = conn.prepareStatement(query);
                pstmt.setString(1, vote);
                pstmt.executeUpdate();
            }

        } catch(NumberFormatException | SQLException e){
            System.out.println(e);
        }
        
        try{
            conn = DriverManager.getConnection(url);
            query = ("UPDATE `Voters Information` SET `Status` = ? WHERE Username LIKE '%"+user+"%' AND Password LIKE '%"+pass+"%'");
            pstmt = conn.prepareStatement(query);
            pstmt.setString(1, "VOTED");
            pstmt.executeUpdate();
           
            
        } catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }   
        
        new Exit_Page().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_cast_votesActionPerformed

    private void prev2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prev2ActionPerformed
        tabpane.setSelectedIndex(1);
    }//GEN-LAST:event_prev2ActionPerformed

    private void rtrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtrnActionPerformed
        new Voters_Log().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_rtrnActionPerformed

    private void pnl_topMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_topMousePressed
        xmouse = evt.getX();
        ymouse = evt.getY();
    }//GEN-LAST:event_pnl_topMousePressed

    private void pnl_topMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_topMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xmouse ,y - ymouse);
    }//GEN-LAST:event_pnl_topMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Voters_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Voters_Menu(user, pass).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JButton cast_votes;
    private javax.swing.JCheckBox cb1;
    private javax.swing.JCheckBox cb10;
    private javax.swing.JCheckBox cb11;
    private javax.swing.JCheckBox cb12;
    private javax.swing.JCheckBox cb13;
    private javax.swing.JCheckBox cb14;
    private javax.swing.JCheckBox cb15;
    private javax.swing.JCheckBox cb16;
    private javax.swing.JCheckBox cb17;
    private javax.swing.JCheckBox cb18;
    private javax.swing.JCheckBox cb19;
    private javax.swing.JCheckBox cb2;
    private javax.swing.JCheckBox cb20;
    private javax.swing.JCheckBox cb21;
    private javax.swing.JCheckBox cb3;
    private javax.swing.JCheckBox cb4;
    private javax.swing.JCheckBox cb5;
    private javax.swing.JCheckBox cb6;
    private javax.swing.JCheckBox cb7;
    private javax.swing.JCheckBox cb8;
    private javax.swing.JCheckBox cb9;
    private javax.swing.JCheckBox cnd1;
    private javax.swing.JCheckBox cnd2;
    private javax.swing.JCheckBox cnd3;
    private javax.swing.JTextPane disp1;
    private javax.swing.JTextPane disp2;
    private javax.swing.JTextField flname;
    private javax.swing.JLabel imgFemale;
    private javax.swing.JLabel imgMale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl10;
    private javax.swing.JLabel lbl11;
    private javax.swing.JLabel lbl12;
    private javax.swing.JLabel lbl13;
    private javax.swing.JLabel lbl14;
    private javax.swing.JLabel lbl15;
    private javax.swing.JLabel lbl16;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel lbl7;
    private javax.swing.JLabel lbl8;
    private javax.swing.JLabel lbl9;
    private javax.swing.JLabel lbl_17;
    private javax.swing.JButton next1;
    private javax.swing.JButton next2;
    private javax.swing.JPanel pnl_main;
    private javax.swing.JPanel pnl_skcc;
    private javax.swing.JPanel pnl_skcp;
    private javax.swing.JPanel pnl_summary;
    private javax.swing.JPanel pnl_top;
    private javax.swing.JPanel pnl_voted;
    private javax.swing.JButton prev1;
    private javax.swing.JButton prev2;
    private javax.swing.JButton rtrn;
    private javax.swing.JTextField sex;
    private javax.swing.JTabbedPane tabpane;
    private javax.swing.JTextField votersno;
    // End of variables declaration//GEN-END:variables
}
